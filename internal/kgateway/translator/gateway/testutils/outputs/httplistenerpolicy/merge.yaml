Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_opentelemetry-collector_4317
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        accessLog:
        - name: envoy.access_loggers.open_telemetry
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig
            attributes:
              values:
              - key: customkey
                value:
                  stringValue: customvalue
            body:
              stringValue: '"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %RESPONSE_CODE%
                "%REQ(:AUTHORITY)%" "%UPSTREAM_CLUSTER%"'''
            commonConfig:
              grpcService:
                envoyGrpc:
                  clusterName: kube_default_opentelemetry-collector_4317
              logName: otel-accesslog-service
              transportApiVersion: V3
            resourceAttributes:
              values:
              - key: service.name
                value:
                  stringValue: example-gateway.default
        httpFilters:
        - name: envoy.filters.http.health_check
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
            headers:
            - name: :path
              stringMatch:
                exact: /health_check
            passThroughMode: false
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        serverHeaderTransformation: APPEND_IF_ABSENT
        statPrefix: http
        streamIdleTimeout: 30s
        tracing:
          customTags:
          - literal:
              value: customvalue
            tag: customkey
          - requestHeader:
              name: x-header-tag
            tag: request
          provider:
            name: envoy.tracers.opentelemetry
            typedConfig:
              '@type': type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
              grpcService:
                envoyGrpc:
                  authority: httpbin.example.com
                  clusterName: kube_default_opentelemetry-collector_4317
              resourceDetectors:
              - name: envoy.tracers.opentelemetry.resource_detectors.environment
                typedConfig:
                  '@type': type.googleapis.com/envoy.extensions.tracers.opentelemetry.resource_detectors.v3.EnvironmentResourceDetectorConfig
              serviceName: my-gateway
          spawnUpstreamSpan: true
        upgradeConfigs:
        - upgradeType: websocket
        useRemoteAddress: false
        xffNumTrustedHops: 2
    name: listener~8080
  metadata:
    filterMetadata:
      merge.HTTPListenerPolicy.gateway.kgateway.dev:
        accessLog:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/access-log
        accessLogConfig:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/access-log
        healthCheckPolicy:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        mergeStreamIdleTimeout:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        serverHeaderTransformation:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        tracing:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/tracing
        upgradeConfig:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        useRemoteAddress:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        xffNumTrustedHops:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
  name: listener~8080
Routes:
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.HTTPListenerPolicy.gateway.kgateway.dev:
        accessLog:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/access-log
        accessLogConfig:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/access-log
        healthCheckPolicy:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        mergeStreamIdleTimeout:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        serverHeaderTransformation:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        tracing:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/tracing
        upgradeConfig:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        useRemoteAddress:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
        xffNumTrustedHops:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/misc
  name: listener~8080
Statuses:
  gateways:
    default/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsNotAllowed
        status: Unknown
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Gateway is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Gateway is programmed
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 0
        conditions:
        - lastTransitionTime: null
          message: Listener is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Listener does not have conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Listener has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Listener is programmed
          reason: Programmed
          status: "True"
          type: Programmed
        name: http
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
  policies:
    HTTPListenerPolicy/default/access-log:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    HTTPListenerPolicy/default/misc:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    HTTPListenerPolicy/default/tracing:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
