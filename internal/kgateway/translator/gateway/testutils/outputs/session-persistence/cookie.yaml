Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_backend_3000
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 80
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: envoy.filters.http.stateful_session
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.stateful_session.v3.StatefulSession
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~80
        statPrefix: http
        useRemoteAddress: true
    name: listener~80
  name: listener~80
Routes:
- ignorePortInHostMatching: true
  name: listener~80
  virtualHosts:
  - domains:
    - '*'
    name: listener~80~*
    routes:
    - match:
        safeRegex:
          googleRe2: {}
          regex: /.+/foo
      name: listener~80~*-route-0-grpcroute-example-grpc-route-default-0-0-matcher-0
      route:
        cluster: kube_default_backend_3000
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.stateful_session:
          '@type': type.googleapis.com/envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute
          statefulSession:
            sessionState:
              name: envoy.http.stateful_session.cookie
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState
                cookie:
                  name: Session-A
                  ttl: 10s
    - match:
        safeRegex:
          googleRe2: {}
          regex: /.+/foo2
      name: listener~80~*-route-1-grpcroute-example-grpc-route-default-1-0-matcher-0
      route:
        cluster: kube_default_backend_3000
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.stateful_session:
          '@type': type.googleapis.com/envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute
          statefulSession:
            sessionState:
              name: envoy.http.stateful_session.cookie
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState
                cookie:
                  name: Session-B
                  ttl: 31536000s
    - match:
        safeRegex:
          googleRe2: {}
          regex: /.+/foo3
      name: listener~80~*-route-2-grpcroute-example-grpc-route-default-2-0-matcher-0
      route:
        cluster: kube_default_backend_3000
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.stateful_session:
          '@type': type.googleapis.com/envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute
          statefulSession:
            sessionState:
              name: envoy.http.stateful_session.cookie
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState
                cookie:
                  name: Session-B
    - match:
        pathSeparatedPrefix: /c1
      name: listener~80~*-route-3-httproute-example-route-default-0-0-matcher-0
      route:
        cluster: kube_default_backend_3000
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.stateful_session:
          '@type': type.googleapis.com/envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute
          statefulSession:
            sessionState:
              name: envoy.http.stateful_session.cookie
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState
                cookie:
                  name: Session-A
                  ttl: 10s
    - match:
        pathSeparatedPrefix: /c2
      name: listener~80~*-route-4-httproute-example-route-default-1-0-matcher-0
      route:
        cluster: kube_default_backend_3000
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.stateful_session:
          '@type': type.googleapis.com/envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute
          statefulSession:
            sessionState:
              name: envoy.http.stateful_session.cookie
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState
                cookie:
                  name: Session-B
                  ttl: 31536000s
    - match:
        pathSeparatedPrefix: /c3
      name: listener~80~*-route-5-httproute-example-route-default-2-0-matcher-0
      route:
        cluster: kube_default_backend_3000
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.stateful_session:
          '@type': type.googleapis.com/envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute
          statefulSession:
            sessionState:
              name: envoy.http.stateful_session.cookie
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState
                cookie:
                  name: Session-B
Statuses:
  gateways:
    default/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsNotAllowed
        status: Unknown
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Gateway is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Gateway is programmed
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 2
        conditions:
        - lastTransitionTime: null
          message: Listener is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Listener does not have conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Listener has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Listener is programmed
          reason: Programmed
          status: "True"
          type: Programmed
        name: http
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
  grpcRoutes:
    default/example-grpc-route:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
  httpRoutes:
    default/example-route:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
