Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_a_svc-a_8080
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_b_svc-b_8080
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_infra_example-svc_80
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 80
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~80
        statPrefix: http
        useRemoteAddress: true
    name: listener~80
  name: listener~80
Routes:
- ignorePortInHostMatching: true
  name: listener~80
  virtualHosts:
  - domains:
    - example.com
    name: listener~80~example_com
    routes:
    - match:
        pathSeparatedPrefix: /a/1
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/a/a
            - gateway.kgateway.dev/TrafficPolicy/infra/example
      name: listener~80~example_com-route-0-httproute-a-a-0-0-rule0-matcher-0
      route:
        cluster: kube_a_svc-a_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: source
                    value:
                      text: example
                  parseBodyBehavior: DontParse
                  passthrough: {}
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: source
                    value:
                      text: a
                  parseBodyBehavior: DontParse
                  passthrough: {}
    - match:
        pathSeparatedPrefix: /a/2
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/infra/example
      name: listener~80~example_com-route-1-httproute-a-a-1-0-rule1-matcher-0
      route:
        cluster: kube_a_svc-a_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: source
                    value:
                      text: example
                  parseBodyBehavior: DontParse
                  passthrough: {}
  - domains:
    - foo.com
    name: listener~80~foo_com
    routes:
    - match:
        pathSeparatedPrefix: /b/1
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/b/b
            - gateway.kgateway.dev/TrafficPolicy/infra/foo
      name: listener~80~foo_com-route-0-httproute-b-b-0-0-rule0-matcher-0
      route:
        cluster: kube_b_svc-b_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: source
                    value:
                      text: b
                  parseBodyBehavior: DontParse
                  passthrough: {}
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: source
                    value:
                      text: foo
                  parseBodyBehavior: DontParse
                  passthrough: {}
    - match:
        pathSeparatedPrefix: /b/2
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/infra/foo
      name: listener~80~foo_com-route-1-httproute-b-b-1-0-rule1-matcher-0
      route:
        cluster: kube_b_svc-b_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: source
                    value:
                      text: foo
                  parseBodyBehavior: DontParse
                  passthrough: {}
Statuses:
  gateways:
    infra/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsNotAllowed
        status: Unknown
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Gateway is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Gateway is programmed
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 2
        conditions:
        - lastTransitionTime: null
          message: Listener is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Listener does not have conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Listener has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Listener is programmed
          reason: Programmed
          status: "True"
          type: Programmed
        name: http
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
  httpRoutes:
    a/a:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.k8s.io
          kind: HTTPRoute
          name: example
          namespace: infra
    b/b:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.k8s.io
          kind: HTTPRoute
          name: foo
          namespace: infra
    infra/example:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
    infra/foo:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
  policies:
    TrafficPolicy/a/a:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/b/b:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/infra/example:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/infra/foo:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
