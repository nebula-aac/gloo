Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_a_extproc_9091
  type: EDS
  typedExtensionProtocolOptions:
    envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      explicitHttpConfig:
        http2ProtocolOptions: {}
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_a_svc-a_8080
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_b_extproc_9091
  type: EDS
  typedExtensionProtocolOptions:
    envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      explicitHttpConfig:
        http2ProtocolOptions: {}
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_b_svc-b_8080
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_infra_example-svc_80
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 80
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: global_disable/ext_proc
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.set_metadata.v3.Config
            metadata:
            - metadataNamespace: dev.kgateway.disable_ext_proc
              value:
                disable: true
        - disabled: true
          name: ext_proc/a/extproc-ext
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.common.matching.v3.ExtensionWithMatcher
            extensionConfig:
              name: composite_ext_proc
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.filters.http.composite.v3.Composite
            xdsMatcher:
              matcherList:
                matchers:
                - onMatch:
                    action:
                      name: composite-action
                      typedConfig:
                        '@type': type.googleapis.com/envoy.extensions.filters.http.composite.v3.ExecuteFilterAction
                        typedConfig:
                          name: envoy.filters.http.ext_proc
                          typedConfig:
                            '@type': type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor
                            grpcService:
                              envoyGrpc:
                                clusterName: kube_a_extproc_9091
                  predicate:
                    singlePredicate:
                      customMatch:
                        name: envoy.matching.matchers.metadata_matcher
                        typedConfig:
                          '@type': type.googleapis.com/envoy.extensions.matching.input_matchers.metadata.v3.Metadata
                          invert: true
                          value:
                            boolMatch: true
                      input:
                        name: disable
                        typedConfig:
                          '@type': type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput
                          filter: dev.kgateway.disable_ext_proc
                          path:
                          - key: disable
        - disabled: true
          name: ext_proc/b/extproc-ext
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.common.matching.v3.ExtensionWithMatcher
            extensionConfig:
              name: composite_ext_proc
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.filters.http.composite.v3.Composite
            xdsMatcher:
              matcherList:
                matchers:
                - onMatch:
                    action:
                      name: composite-action
                      typedConfig:
                        '@type': type.googleapis.com/envoy.extensions.filters.http.composite.v3.ExecuteFilterAction
                        typedConfig:
                          name: envoy.filters.http.ext_proc
                          typedConfig:
                            '@type': type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor
                            grpcService:
                              envoyGrpc:
                                clusterName: kube_b_extproc_9091
                  predicate:
                    singlePredicate:
                      customMatch:
                        name: envoy.matching.matchers.metadata_matcher
                        typedConfig:
                          '@type': type.googleapis.com/envoy.extensions.matching.input_matchers.metadata.v3.Metadata
                          invert: true
                          value:
                            boolMatch: true
                      input:
                        name: disable
                        typedConfig:
                          '@type': type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput
                          filter: dev.kgateway.disable_ext_proc
                          path:
                          - key: disable
        - disabled: true
          name: ratelimit/local
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
            statPrefix: http_local_rate_limiter
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~80
        statPrefix: http
        useRemoteAddress: true
    name: listener~80
  name: listener~80
Routes:
- ignorePortInHostMatching: true
  name: listener~80
  virtualHosts:
  - domains:
    - example.com
    name: listener~80~example_com
    routes:
    - match:
        pathSeparatedPrefix: /mid/a/1
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            extProc:
            - gateway.kgateway.dev/TrafficPolicy/a/a1
            rateLimit.local:
            - gateway.kgateway.dev/TrafficPolicy/a/a1
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/a/a1
      name: listener~80~example_com-route-0-httproute-a1-a-0-0-matcher-0
      route:
        cluster: kube_a_svc-a_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ext_proc/a/extproc-ext:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute
          overrides: {}
        ratelimit/local:
          '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          filterEnabled:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enabled
          filterEnforced:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enforced
          statPrefix: http_local_rate_limiter
          tokenBucket:
            fillInterval: 3s
            maxTokens: 3
            tokensPerFill: 3
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: a1
                    value:
                      text: a1
                  parseBodyBehavior: DontParse
                  passthrough: {}
    - match:
        pathSeparatedPrefix: /mid/b/1
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            extProc:
            - gateway.kgateway.dev/TrafficPolicy/b/b1
            rateLimit.local:
            - gateway.kgateway.dev/TrafficPolicy/mid/mid
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/mid/mid
      name: listener~80~example_com-route-1-httproute-b1-b-0-0-matcher-0
      route:
        cluster: kube_b_svc-b_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ext_proc/b/extproc-ext:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute
          overrides: {}
        ratelimit/local:
          '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          filterEnabled:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enabled
          filterEnforced:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enforced
          statPrefix: http_local_rate_limiter
          tokenBucket:
            fillInterval: 2s
            maxTokens: 2
            tokensPerFill: 2
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: mid
                    value:
                      text: mid
                  parseBodyBehavior: DontParse
                  passthrough: {}
    - match:
        prefix: /
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            rateLimit.local:
            - gateway.kgateway.dev/TrafficPolicy/infra/example-policy
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/infra/example-policy
      name: listener~80~example_com-route-5-httproute-example-route-infra-0-0-matcher-0
      route:
        cluster: kube_infra_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ratelimit/local:
          '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          filterEnabled:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enabled
          filterEnforced:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enforced
          statPrefix: http_local_rate_limiter
          tokenBucket:
            fillInterval: 1s
            maxTokens: 1
            tokensPerFill: 1
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: example
                    value:
                      text: example
                  parseBodyBehavior: DontParse
                  passthrough: {}
Statuses:
  gateways:
    infra/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsNotAllowed
        status: Unknown
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Gateway is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Gateway is programmed
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 1
        conditions:
        - lastTransitionTime: null
          message: Listener is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Listener does not have conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Listener has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Listener is programmed
          reason: Programmed
          status: "True"
          type: Programmed
        name: http
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
  httpRoutes:
    a/a1:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.k8s.io
          kind: HTTPRoute
          name: mid-a
          namespace: mid
    b/b1:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.k8s.io
          kind: HTTPRoute
          name: mid-b
          namespace: mid
    infra/example-route:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
    mid/mid-a:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.k8s.io
          kind: HTTPRoute
          name: example-route
          namespace: infra
    mid/mid-b:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: gateway.networking.k8s.io
          kind: HTTPRoute
          name: example-route
          namespace: infra
  policies:
    TrafficPolicy/a/a1:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/b/b1:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/infra/example-policy:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Overridden due to conflict with higher priority policy in target(s)
          reason: Overridden
          status: "False"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/mid/mid:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Overridden due to conflict with higher priority policy in target(s)
          reason: Overridden
          status: "False"
          type: Attached
        controllerName: kgateway.dev/kgateway
