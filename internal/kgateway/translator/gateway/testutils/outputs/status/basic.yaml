Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_example-svc_80
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 80
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: envoy.filters.http.cors
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
        - disabled: true
          name: ratelimit/local
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
            statPrefix: http_local_rate_limiter
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~80
        statPrefix: http
        streamIdleTimeout: 30s
        useRemoteAddress: true
        xffNumTrustedHops: 2
    name: listener~80
  metadata:
    filterMetadata:
      merge.HTTPListenerPolicy.gateway.kgateway.dev:
        mergeStreamIdleTimeout:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/policy-2
        xffNumTrustedHops:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/policy-1
  name: listener~80
Routes:
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.HTTPListenerPolicy.gateway.kgateway.dev:
        mergeStreamIdleTimeout:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/policy-2
        xffNumTrustedHops:
        - gateway.kgateway.dev/HTTPListenerPolicy/default/policy-1
  name: listener~80
  virtualHosts:
  - domains:
    - example2.com
    name: listener~80~example2_com
    routes:
    - match:
        prefix: /
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            cors:
            - gateway.kgateway.dev/TrafficPolicy/default/policy-no-merge
      name: listener~80~example2_com-route-0-httproute-route-2-default-0-0-rule0-matcher-0
      route:
        cluster: kube_default_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.cors:
          '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
          allowOriginStringMatch:
          - exact: https://example.com
          maxAge: "5"
  - domains:
    - example.com
    name: listener~80~example_com
    routes:
    - match:
        prefix: /
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            cors:
            - gateway.kgateway.dev/TrafficPolicy/default/extensionref-policy
            rateLimit.local:
            - gateway.kgateway.dev/TrafficPolicy/default/policy-without-section-name
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/default/policy-with-section-name
      name: listener~80~example_com-route-0-httproute-route-1-default-0-0-rule0-matcher-0
      route:
        cluster: kube_default_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.cors:
          '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
          allowOriginStringMatch:
          - exact: https://example.com
          maxAge: "5"
        ratelimit/local:
          '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          filterEnabled:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enabled
          filterEnforced:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enforced
          statPrefix: http_local_rate_limiter
          tokenBucket:
            fillInterval: 33s
            maxTokens: 99
            tokensPerFill: 1
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              responseTransformation:
                transformationTemplate:
                  headersToAppend:
                  - key: abc
                    value:
                      text: custom-value-abc
                  parseBodyBehavior: DontParse
                  passthrough: {}
Statuses:
  gateways:
    default/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsNotAllowed
        status: Unknown
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Gateway is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Gateway is programmed
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 2
        conditions:
        - lastTransitionTime: null
          message: Listener is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Listener does not have conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Listener has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Listener is programmed
          reason: Programmed
          status: "True"
          type: Programmed
        name: http
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
  httpRoutes:
    default/route-1:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
    default/route-2:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Route is accepted
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Route has valid refs
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
  policies:
    HTTPListenerPolicy/default/policy-1:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          observedGeneration: 1
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          observedGeneration: 1
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    HTTPListenerPolicy/default/policy-2:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          observedGeneration: 2
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          observedGeneration: 2
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/default/extensionref-policy:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          observedGeneration: 1
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          observedGeneration: 1
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/default/fully-ignored:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          observedGeneration: 4
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Overridden due to conflict with higher priority policy in target(s)
          observedGeneration: 4
          reason: Overridden
          status: "False"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/default/policy-no-merge:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          observedGeneration: 1
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          observedGeneration: 1
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/default/policy-with-section-name:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          observedGeneration: 2
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          observedGeneration: 2
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/default/policy-without-section-name:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: default
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          observedGeneration: 3
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Merged with other policies in target(s) and attached
          observedGeneration: 3
          reason: Merged
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
